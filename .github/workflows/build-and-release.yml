name: Build and Release

on:
  push:
    branches:
      - issue-12-test # TODO remove
    tags:
      - "v*.*.*"
  # pull_request:
  #   branches:
  #     - issue-12-test # TODO remove

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Build the project
        run: npm run build

      - name: Build binaries with pkg
        run: npm run build:binaries

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get the version from package.json
        run: |
          export VERSION_TAG=$(jq -r '.version' package.json)
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "RELEASING VERSION $VERSION_TAG"

      - name: Create Release
        # if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: Release ${{ env.VERSION_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Binary (x64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-linux-x64
          asset_name: seam-linux-x64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
      - name: Upload MacOS Binary (x64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-macos-x64
          asset_name: seam-macos-x64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
      - name: Upload MacOS Binary (arm64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-macos-arm64
          asset_name: seam-macos-arm64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
      - name: Upload Windows Binary (x64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-win-x64.exe
          asset_name: seam-win-x64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
